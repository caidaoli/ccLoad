# ccLoad 环境配置示例文件
# 复制此文件为 .env 并根据需要修改配置值

# ========================================
# 核心配置（必需）
# ========================================

# 管理后台密码（必需，生产环境必须设置强密码）
CCLOAD_PASS=your_strong_password_here

# API 访问令牌（可选，多个令牌用逗号分隔）
# 设置后所有 /v1/messages 请求需提供 Authorization: Bearer <token> 头
# 未设置时该端点无需认证即可访问
CCLOAD_AUTH=your_api_token_1,your_api_token_2

# ========================================
# 数据库配置
# ========================================

# SQLite 数据库路径（可选，默认: data/ccload.db）
SQLITE_PATH=./data/ccload.db

# 主数据库内存模式（可选，默认: false）
# 启用后渠道配置、冷却状态等热数据存储在内存中，性能提升 50-100 倍
# ⚠️ 警告：服务重启后主数据库数据将丢失，强烈建议配合 Redis 同步使用
# 日志数据始终持久化到磁盘，不受影响
# CCLOAD_USE_MEMORY_DB=true

# SQLite Journal 模式（可选，默认: WAL）
# 可选值: WAL | DELETE | TRUNCATE | PERSIST | MEMORY | OFF
# - WAL（默认）：Write-Ahead Logging，高性能，适合本地文件系统
# - TRUNCATE：传统回滚日志，适合 Docker/K8s 环境或网络存储（NFS等）
# - DELETE：与 TRUNCATE 类似，但删除日志文件而非截断
# ⚠️ 容器环境建议：SQLITE_JOURNAL_MODE=TRUNCATE（避免WAL文件损坏风险）
# SQLITE_JOURNAL_MODE=WAL

# ========================================
# 网络配置
# ========================================

# HTTP 服务端口（可选，默认: 8080）
PORT=8080

# TLS 证书验证（可选，默认: false，启用证书验证）
# ⚠️ 警告：设置为 true 会禁用 TLS 证书验证，仅用于开发/测试环境
# 生产环境严禁使用！存在中间人攻击风险，可能导致 API Key 泄漏
# CCLOAD_SKIP_TLS_VERIFY=true

# ========================================
# 性能优化配置
# ========================================

# 单个渠道内最大 Key 重试次数（可选，默认: 3）
# 避免 key 过多时重试次数过多导致延迟
# 实际重试次数 = min(此值, 渠道实际Key数量)
# CCLOAD_MAX_KEY_RETRIES=3

# HTTP Trace 详细追踪（可选，默认: 0 禁用）
# 启用后记录 DNS、连接、TLS 握手等详细时序信息
# 会增加 0.5-1ms/请求 的性能开销，仅用于调试
# CCLOAD_ENABLE_TRACE=1

# ========================================
# Redis 同步配置（可选）
# ========================================

# Redis 连接 URL（可选，用于渠道数据同步备份）
# 格式: redis://localhost:6379 或 redis://user:password@localhost:6379/0
# 启用内存数据库模式时强烈推荐配置，用于故障恢复
# REDIS_URL=redis://localhost:6379

# ========================================
# 运行模式配置
# ========================================

# Gin 运行模式（可选，默认: debug）
# 生产环境建议设置为 release
# GIN_MODE=release
